<launch>
  <!--
    Adapted based on
    http://wiki.ros.org/rtabmap_ros/Tutorials/MappingAndNavigationOnTurtlebot#Localization_mode

    This launch file starts the navigation function for the course robot with realsense camera only.
    Rtabmap is used for SLAM.
    ROS package of depthimage_to_laserscan is used to create a fake laser sensor for ROS navigation stack.
    Yongming Qin
    2020_1104
  -->

  <!-- Arguments -->
  <arg name="open_rviz" default="true"/>
  <arg name="rtabmapviz" default="true"/>
  <arg name="localization" default="false"/>
  <arg name="database_path" default="~/.ros/rtabmap.db"/>
  <arg     if="$(arg localization)" name="rtabmap_args" default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args" default="-d"/>


  <!-- move_base -->
  <!-- Arguments -->
  <!-- <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/> -->
  <arg name="model" default="course" doc="model type [course, burger, waffle, waffle_pi]"/>
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />
  <arg name="move_forward_only" default="false"/>

  <!-- tf transform -->
  <!-- <node pkg="tf" type="static_transform_publisher"  name="base_to_camera"
        args="1.0 0.0 0.0 0 0 0 base_link camera_link 1" /> -->

  <include file="$(find realsense2_camera)/launch/rs_camera.launch">
    <!-- <arg name="align_depth" value="true"/> -->
    <!-- <arg name="unite_imu_method" value="linear_interpolation"/> -->
    <arg name="enable_gyro" value="true"/>
    <arg name="enable_accel" value="true"/>
  </include>

  <!-- <node pkg="imu_filter_madgwick" type="imu_filter_node" name="realsense_imu_filter" output="screen">
    <remap from="/imu/data_raw" to="/camera/imu"/>
    <remap from="/imu/data" to="/rtabmap/imu"/>
    <param name="use_mag" value="false"/>
    <param name="publish_tf" value="false"/>
    <param name="world_frame" value="enu"/>
  </node> -->

  </launch>


 <!-- Fake laser -->
  <!-- <node pkg="depthimage_to_laserscan" type="depthimage_to_laserscan" name="depthimage_to_laserscan">
    <remap from="image" to="/camera/depth/image_rect_raw"/>
    <remap from="camera_info" to="/camera/depth/camera_info"/>
    <remap from="scan" to="/scan"/>
    
    <param name="scan_height" value="10"/>
    <param name="output_frame_id" value="/camera_depth_frame"/>
    <param name="range_min" value="0.45"/>
  </node> -->


 


  
  <!-- move_base -->
  <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />
    <rosparam file="$(find thk_nav)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find thk_nav)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find thk_nav)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find thk_nav)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find thk_nav)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find thk_nav)/param/dwa_local_planner_params_$(arg model).yaml" command="load" />
    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
    <param name="DWAPlannerROS/min_vel_x" value="0.0" if="$(arg move_forward_only)" />
  </node> -->

  <!-- rviz -->
  <!-- <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find thk_nav)/rviz/turtlebot3_navigation.rviz"/>
  </group> -->



